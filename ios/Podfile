# Uncomment this line to define a global platform for your project
platform :ios, '13.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    # Configuraciones espec칤ficas para WebRTC y videollamadas
    target.build_configurations.each do |config|
      # NUEVO: Configuraci칩n de permisos requerida para permission_handler
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= [
        '$(inherited)',
        
        ## dart: PermissionGroup.microphone - REQUERIDO para flutter_sound
        'PERMISSION_MICROPHONE=1',
        
        ## dart: PermissionGroup.camera
        'PERMISSION_CAMERA=1',
        
        ## dart: PermissionGroup.photos
        'PERMISSION_PHOTOS=1',
        
        ## dart: PermissionGroup.notification
        'PERMISSION_NOTIFICATIONS=1',
      ]
      
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      config.build_settings['SWIFT_VERSION'] = '5.0'
      
      # Configuraci칩n GLOBAL para generar dSYM files correctamente
      if config.name == 'Release' || config.name == 'Profile'
        config.build_settings['DEBUG_INFORMATION_FORMAT'] = 'dwarf-with-dsym'
        config.build_settings['DWARF_DSYM_FOLDER_PATH'] = '$(CONFIGURATION_BUILD_DIR)'
        config.build_settings['DWARF_DSYM_FILE_NAME'] = '$(PRODUCT_NAME).dSYM'
        config.build_settings['STRIP_INSTALLED_PRODUCT'] = 'NO'
        config.build_settings['COPY_PHASE_STRIP'] = 'NO'
        config.build_settings['DEPLOYMENT_POSTPROCESSING'] = 'YES'
      end
      
      # FIX para CryptoSwift bundle issue
      if target.name == 'CryptoSwift'
        config.build_settings['PRODUCT_BUNDLE_IDENTIFIER'] = 'org.cocoapods.${PRODUCT_NAME:rfc1034identifier}'
        config.build_settings['SKIP_INSTALL'] = 'YES'
        config.build_settings['GENERATE_INFOPLIST_FILE'] = 'NO'
        # Evitar que genere bundle problem치tico
        config.build_settings['WRAPPER_EXTENSION'] = 'framework'
      end
      
      # Configuraciones espec칤ficas para frameworks problem치ticos
      framework_targets = ['WebRTC', 'flutter_webrtc', 'Flutter', 'flutter_callkit_incoming']
      if framework_targets.include?(target.name)
        config.build_settings['ENABLE_BITCODE'] = 'NO'
        config.build_settings['VALID_ARCHS'] = 'arm64 x86_64'
        
        # Forzar generaci칩n de dSYM para estos frameworks
        if config.name == 'Release' || config.name == 'Profile'
          config.build_settings['DEBUG_INFORMATION_FORMAT'] = 'dwarf-with-dsym'
          config.build_settings['STRIP_INSTALLED_PRODUCT'] = 'NO'
        end
      end
    end
  end
  
  # Configurar CryptoSwift para que no genere bundle problem치tico
  cryptoswift_target = installer.pods_project.targets.find { |target| target.name == 'CryptoSwift' }
  if cryptoswift_target
    puts "游댢 Configurando CryptoSwift para evitar bundle problem치tico..."
    cryptoswift_target.build_configurations.each do |config|
      config.build_settings['SKIP_INSTALL'] = 'YES'
      config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'NO'
      config.build_settings['DEFINES_MODULE'] = 'YES'
    end
  end
end
